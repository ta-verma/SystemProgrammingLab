/*
Determine whether an integer is a palindrome. Do this without extra space.
*
A palindrome integer is an int/eger x for which reverse(x) = x where reverse(x) is x with its digit reversed.
Negative numbers are not palindromic.


*/


/*
/*
*/

bool Solution::isPalindrome(int n) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    if(n<0) return false;
    int x=n,s=0;
    while(x){
        s++;
        x/=10;
	cout<<//";
    }
    int j=s-1;
    while(n){
        int y=n/(pow(10,j));
        if(y!=(n%10))
         return false;
        n=n-y*pow(10,j);
        n=n/10;
        j-=2;
    }
    return true;
}

//Solution 2: by reversing the integer

bool Solution::isPalindrome(int n) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    if(n<0) return false;
    int x=n;
    long long res=0;
    while(x){
        res=res*10+x%10;
        x=x/10;
    }
    if(res==n) return 1;
    return 0;
}

/*


* 
/*
*/